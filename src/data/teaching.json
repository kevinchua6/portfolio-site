[
  {
    "year": "Jan 2022 - Apr 2022",
    "title": "CS2030S Programming Methodology II Teaching Assistant",
    "body": "Tutor and guide 14 Computer Science freshmen during physical lab sessions to: \n● Explore 2 modern programming paradigms: object-oriented programming and functional programming \n● Understand conventional design patterns used in developing medium-scale software programs \n● Learn advanced programming constructs like polymorphism, inheritance, first class functions, closures, continuations, monads, etc",
    "color": "green",
    "tags": ["teaching", "OOP", "Java"]
  },
  {
    "year": "Jan 2022 - Apr 2022",
    "title": "CS2040S Data Structures and Algorithms Teaching Assistant",
    "body": "Tutor and guide 16 Computer Science freshmen during physical tutorial sessions to: \n● Learn algorithmitic thinking and apply them to different problems with consideration about time and space complexity. \n● Internalise concepts like Orders of growth, sorting, balanced binary search trees, hash tables, simple amortized analysis, graph searching algorithms, shortest path algorithms, topological sorts, minimum spanning trees, heaps, union find data structures, dynamic programming",
    "color": "green",
    "tags": ["teaching", "Data Structures", "Java"]
  },
  {
    "year": "Aug 2021 - Nov 2021",
    "title": "CS1101S Programming Methodology Teaching Assistant",
    "body": "Tutor and guide 8 Computer Science freshmen during physical tutorial sessions to: \n● Build solid programming fundamentals and appreciate computational thinking \n● Internalise concepts like Functional Abstraction, Recursion, Higher-order Functions, Data Abstraction, Algorithmic Strategies, State Mutation, Loops and Arrays, Sorting and Searching",
    "color": "green",
    "tags": ["teaching", "JavaScript"]
  }
]
